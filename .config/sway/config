# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | tofi-drun --drun-launch=true | xargs swaymsg exec --
set $filemanager nautilus

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /home/jedrw/Pictures/Wallpapers/current.png fill

output HDMI-A-1 {
    resolution 2560x1440@75Hz
    position 0 0
    transform 270
}

output DP-1 {
    resolution 2560x1440@170Hz
    render_bit_depth 10
    position 1440 560
}


#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
set $lock 'swaylock -f -c 000000 -i /home/jedrw/Pictures/Wallpapers/current.png'

exec swayidle -w \
    timeout 300 $lock \
    timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
    before-sleep $lock

bindsym $mod+l exec $lock

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:pointer {
    accel_profile flat
}

input type:touchpad {
    accel_profile flat
    pointer_accel 0.4
}

input "1267:12615:DELL0A80:00_04F3:3147_Touchpad" {
	tap enabled
	natural_scroll enabled
}

input type:keyboard {
	xkb_layout gb
}

default_border pixel 2

# Dropdown terminal
set $ddterm-id dropdown-terminal
set $ddterm $term --class $ddterm-id
set $ddterm-resize resize set 100ppt 100ppt, move position 0 0
for_window [app_id="$ddterm-id"] {
  floating enable
  $ddterm-resize
  move to scratchpad
  scratchpad show
}

bindsym $mod+grave exec swaymsg '[app_id="$ddterm-id"] scratchpad show' \
  || $ddterm \
  && sleep .1 \
  && swaymsg '[app_id="$ddterm-id"] $ddterm-resize'

bindsym Ctrl+grave exec swaymsg '[app_id="$ddterm-id"] scratchpad show' \
  || $ddterm \
  && sleep .1 \
  && swaymsg '[app_id="$ddterm-id"] $ddterm-resize'

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+t exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start launcher
    bindsym ctrl+space exec $menu

    # Open file manager
    bindsym $mod+e exec $filemanager

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym XF86Calculator exec gnome-calculator

    bindsym Print exec grimblast copy area

    bindsym XF86MonBrightnessUp exec brightnessctl s +5%
    bindsym XF86MonBrightnessDown exec brightnessctl s 5%-
    bindsym XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
    bindsym XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
    bindsym XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    bindswitch lid:on exec $lock && systemctl suspend
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+a layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    # bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    # bindsym $mod+o focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    # bindsym $mod+Shift+grave move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    # bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#

exec_always 'pkill waybar; waybar --config ~/.config/waybar/waybar.jsonc'
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     swaybar_command waybar
#     position top

#     # # When the status_command prints a new line to stdout, swaybar updates.
#     # # The default just shows the current date and time.
#     # status_command while date +'%Y-%m-%d %X'; do sleep 1; done

#     # colors {
#     #     statusline #ffffff
#     #     background #323232
#     #     inactive_workspace #32323200 #32323200 #5c5c5c
#     # }
# }

include /etc/sway/config.d/*
